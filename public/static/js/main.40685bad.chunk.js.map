{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElmenets/LoadingSpinner/LoadingSpinner.js","shared/components/UIElmenets/Backdrop/Backdrop.js","shared/hooks/useAuth/useAuth.js","shared/components/Navigation/MainHeader/MainHeader.js","shared/components/Navigation/NavLinks/NavLinks.js","shared/components/Navigation/SideDrawer/SideDrawer.js","shared/components/Navigation/MainNavi/MainNavi.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavi","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","console","log","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.40685bad.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    token: null,\r\n    login: () => {},\r\n    logout: () => {}\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = (props) => {\n    return (\n        <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n            <div className='lds-dual-ring'></div>\n        </div>\n    );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect} from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        const tokenExpirationDate =\r\n            expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); // 1h\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem(\r\n            'userData',\r\n            JSON.stringify({\r\n                userId: uid,\r\n                token: token,\r\n                expiration: tokenExpirationDate.toISOString()\r\n            })\r\n        );\r\n        setUserId(uid);\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            console.log(remainingTime);\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n        if (\r\n            storedData &&\r\n            storedData.token &&\r\n            (new Date(storedData.expiration) > new Date())\r\n        ) {\r\n            login(storedData.userId, storedData.token);\r\n        }\r\n    }, [login]);\r\n\r\n    return { token, login, logout, userId }\r\n};","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = (props) => {\r\n    return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = (props) => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className='nav-links'>\r\n            <li>\r\n                <NavLink to='/' exact>\r\n                    All Users\r\n                </NavLink>\r\n            </li>\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to='/places/new'>Add Places</NavLink>\r\n                </li>\r\n            )}\r\n            {!auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to='/auth'>Login</NavLink>\r\n                </li>\r\n            )}\r\n\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <button onClick={auth.logout}>LOGOUT</button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = (props) => {\r\n    const content = (\r\n        <CSSTransition\r\n            in={props.show}\r\n            timeout={200}\r\n            classNames=\"slide-in-left\"\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <aside className=\"side-drawer\" onClick={props.onClick}>\r\n                {props.children}\r\n            </aside>\r\n        </CSSTransition>\r\n    );\r\n\r\n    return ReactDOM.createPortal(\r\n        content,\r\n        document.getElementById('drawer-hook')\r\n    );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from '../MainHeader/MainHeader';\r\nimport NavLinks from '../NavLinks/NavLinks';\r\nimport SideDrawer from '../SideDrawer/SideDrawer';\r\nimport Backdrop from '../../UIElmenets/Backdrop/Backdrop';\r\n\r\nimport './MainNavi.css';\r\n\r\nconst MainNavi = (props) => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n    };\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\\\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className='main-navigation__drawer-nav'>\r\n                    <NavLinks />\r\n                </nav>\r\n            </SideDrawer>\r\n            <MainHeader>\r\n                <button\r\n                    className='main-navigation__menu-btn'\r\n                    onClick={openDrawerHandler}\r\n                >\r\n                    <span />\r\n                    <span />\r\n                    <span />\r\n                </button>\r\n                <h1 className='main-navigation__title'>\r\n                    <Link to='/'>Your places</Link>\r\n                </h1>\r\n                <nav className='main-navigation__header-nav'>\r\n                    <NavLinks />\r\n                </nav>\r\n            </MainHeader>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MainNavi;\r\n","import React, { Suspense } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace/UpdatePlace';\n// import Auth from './user/pages/Auth/Auth';\nimport MainNavi from './shared/components/Navigation/MainNavi/MainNavi';\nimport LoadingSpinner from './shared/components/UIElmenets/LoadingSpinner/LoadingSpinner';\n\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/useAuth/useAuth';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth/Auth'));\n\nconst App = () => {\n    const { token, userId, login, logout } = useAuth();\n\n    let routes;\n\n    if (token) {\n        routes = (\n            <Switch>\n                <Route path='/' exact>\n                    <Users />\n                </Route>\n                <Route path='/:userId/places' exact>\n                    <UserPlaces />\n                </Route>\n                <Route path='/places/new' exact>\n                    <NewPlace />\n                </Route>\n                <Route path='/places/:placeId'>\n                    <UpdatePlace />\n                </Route>\n                <Redirect to='/' />\n            </Switch>\n        );\n    } else {\n        routes = (\n            <Switch>\n                <Route path='/' exact>\n                    <Users />\n                </Route>\n                <Route path='/:userId/places' exact>\n                    <UserPlaces />\n                </Route>\n                <Route path='/auth'>\n                    <Auth />\n                </Route>\n                <Redirect to='/auth' />\n            </Switch>\n        );\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                isLoggedIn: !!token,\n                token: token,\n                userId: userId,\n                login: login,\n                logout: logout\n            }}\n        >\n            <MainNavi />\n            <main>\n                <Suspense\n                    fallback={\n                        <div className='center'>\n                            <LoadingSpinner />\n                        </div>\n                    }\n                >\n                    {routes}\n                </Suspense>\n            </main>\n        </AuthContext.Provider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}