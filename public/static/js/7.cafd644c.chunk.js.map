{"version":3,"sources":["shared/components/FormElements/ImageUpload/ImageUpload.js","places/pages/NewPlace/NewPlace.js"],"names":["ImageUpload","props","filePickerRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","type","accept","onChange","e","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","onClick","current","click","errorText","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendReq","clearError","useForm","title","value","description","address","image","formState","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","onClear","onSubmit","asOverlay","element","label","validators","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","disabled"],"mappings":"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","file":"static/js/7.cafd644c.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from '../Button/Button';\r\n\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = (props) => {\r\n    const filePickerRef = useRef();\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickedHandler = (e) => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n\r\n        if (e.target.files && e.target.files.length === 1) {\r\n            pickedFile = e.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className='form-control'>\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type='file'\r\n                accept='.jpg,.png,.jpeg'\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className='image-upload__preview'>\r\n                    {previewUrl ? (\r\n                        <img src={previewUrl} alt='Preview' />\r\n                    ) : (\r\n                        <p>Please Pick an image.</p>\r\n                    )}\r\n                </div>\r\n\r\n                <Button type='button' onClick={pickImageHandler}>\r\n                    PICK IMAGE\r\n                </Button>\r\n            </div>\r\n\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from '../../../shared/hooks/useForm/useForm';\r\n\r\nimport Input from '../../../shared/components/FormElements/Input/Input';\r\nimport Button from '../../../shared/components/FormElements/Button/Button';\r\nimport ErrorModal from '../../../shared/components/UIElmenets/ErrorModal/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/components/UIElmenets/LoadingSpinner/LoadingSpinner';\r\nimport ImageUpload from '../../../shared/components/FormElements/ImageUpload/ImageUpload';\r\n\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../../shared/util/validators';\r\n\r\nimport { AuthContext } from '../../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../../shared/hooks/useHttp/useHttp';\r\n\r\nimport '../PlaceForm.css';\r\n\r\nconst NewPlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendReq, clearError } = useHttpClient();\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            title: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            address: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            image: {\r\n                value: null,\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const history = useHistory();\r\n\r\n    const placeSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('title', formState.inputs.title.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('address', formState.inputs.address.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n            await sendReq(\r\n                process.env.REACT_APP_BACKEND_URL + '/places',\r\n                'POST',\r\n                formData, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n                // JSON.stringify({\r\n                //     title: formState.inputs.title.value,\r\n                //     description: formState.inputs.description.value,\r\n                //     address: formState.inputs.address.value,\r\n                //     creator: auth.userId\r\n                // }),\r\n                // {\r\n                //     'Content-Type': 'application/json'\r\n                // }\r\n            );\r\n\r\n            // Redirect the user to a different page\r\n            history.push('/');\r\n        } catch (err) {}\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <form className='place-form' onSubmit={placeSubmitHandler}>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <Input\r\n                    id='title'\r\n                    element='input'\r\n                    type='text'\r\n                    label='Title'\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText='Please enter a value title.'\r\n                    onInput={inputHandler}\r\n                />\r\n\r\n                <Input\r\n                    id='description'\r\n                    element='textarea'\r\n                    label='Description'\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText='Please enter a value description (At least 5 Characters).'\r\n                    onInput={inputHandler}\r\n                />\r\n\r\n                <Input\r\n                    id='address'\r\n                    element='input'\r\n                    label='Address'\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText='Please enter a value address.'\r\n                    onInput={inputHandler}\r\n                />\r\n                <ImageUpload\r\n                    id='image'\r\n                    onInput={inputHandler}\r\n                    errorText='Please provide an image'\r\n                />\r\n                <Button type='submit' disabled={!formState.isValid}>\r\n                    ADD PLACE\r\n                </Button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}